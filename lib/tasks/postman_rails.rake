namespace :postman do
  desc 'Sync all API endpoints with Postman'
  task sync_all: :environment do
    PostmanRails.sync_all
    puts "Successfully synced all endpoints with Postman"
  end

  desc 'Sync a specific controller with Postman'
  task :sync_controller, [:controller] => :environment do |_, args|
    PostmanRails.sync_controller(args[:controller])
    puts "Successfully synced controller '#{args[:controller]}' with Postman"
  end

  desc 'Sync a specific action with Postman'
  task :sync_action, [:controller, :action] => :environment do |_, args|
    PostmanRails.sync_action(args[:controller], args[:action])
    puts "Successfully synced action '#{args[:controller]}##{args[:action]}' with Postman"
  end
  
  desc 'List all Postman collections'
  task list_collections: :environment do
    collections = PostmanRails.list_collections
    
    if collections.empty?
      puts "No collections found."
    else
      puts "Available collections:"
      collections.each do |collection|
        puts "- #{collection['name']} (ID: #{collection['uid']})"
      end
    end
  end
  
  desc 'Show details of a specific collection'
  task :show_collection, [:collection_id] => :environment do |_, args|
    collection_id = args[:collection_id] || PostmanRails.config.collection_id
    collection = PostmanRails.get_collection(collection_id)
    
    if collection
      puts "Collection: #{collection['info']['name']}"
      puts "Description: #{collection['info']['description']}" if collection['info']['description']
      puts "Items: #{collection['item'].size}"
      
      puts "\nEndpoints:"
      collection['item'].each do |item|
        puts "- #{item['name']}"
      end
    else
      puts "Collection not found."
    end
  end
  
  desc 'List all Postman environments'
  task list_environments: :environment do
    environments = PostmanRails.list_environments
    
    if environments.empty?
      puts "No environments found."
    else
      puts "Available environments:"
      environments.each do |env|
        puts "- #{env['name']} (ID: #{env['uid']})"
      end
    end
  end
  
  desc 'Create a new Postman collection'
  task :create_collection, [:name, :description] => :environment do |_, args|
    name = args[:name] || "Rails API Documentation"
    description = args[:description] || "Generated by PostmanRails gem"
    
    collection = PostmanRails.create_collection(name, description)
    
    if collection
      puts "Collection created successfully!"
      puts "Name: #{collection['name']}"
      puts "ID: #{collection['id']}"
      puts "\nYou can add this ID to your configuration:"
      puts "PostmanRails.configure do |config|"
      puts "  config.collection_id = '#{collection['id']}'"
      puts "end"
    else
      puts "Failed to create collection."
    end
  end
end 
